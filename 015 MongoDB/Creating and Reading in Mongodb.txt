// Switch to school database
use school

// Insert sample teachers
db.teachers.insertMany([
  { 
    _id: ObjectId("507f1f77bcf86cd799439011"),
    name: 'Dr. Kumar',
    subject: 'MongoDB',
    experience: 5
  },
  { 
    _id: ObjectId("507f1f77bcf86cd799439012"),
    name: 'Prof. Sharma',
    subject: 'Node.js',
    experience: 8
  },
  { 
    _id: ObjectId("507f1f77bcf86cd799439013"),
    name: 'Ms. Patel',
    subject: 'Express',
    experience: 3
  }
])

// Insert sample students with teacher references
db.students.insertMany([
  { 
    name: 'Ali',
    age: 22,
    course: 'MongoDB',
    enrolled: true,
    teacherId: ObjectId("507f1f77bcf86cd799439011"),
    grades: [85, 90, 88]
  },
  { 
    name: 'Sara',
    age: 20,
    course: 'Node.js',
    enrolled: true,
    teacherId: ObjectId("507f1f77bcf86cd799439012"),
    grades: [92, 88, 95]
  },
  { 
    name: 'Ahmed',
    age: 24,
    course: 'Express',
    enrolled: true,
    teacherId: ObjectId("507f1f77bcf86cd799439013"),
    grades: [78, 82, 85]
  },
  { 
    name: 'Fatima',
    age: 21,
    course: 'MongoDB',
    enrolled: true,
    teacherId: ObjectId("507f1f77bcf86cd799439011"),
    grades: [95, 93, 97]
  },
  { 
    name: 'Ravi',
    age: 23,
    course: 'Node.js',
    enrolled: false,
    teacherId: ObjectId("507f1f77bcf86cd799439012"),
    grades: [70, 75, 72]
  }
])


----------------------------------------------------------------------------

db.students.insertOne({
  name: 'Priya',
  age: 19,
  course: 'MongoDB',
  enrolled: true,
  teacherId: ObjectId("507f1f77bcf86cd799439011"),
  grades: [88, 91, 89]
})


--------------------------------------------------------------------------

db.students.insertMany([
  { 
    name: 'Kabir',
    age: 20,
    course: 'Node.js',
    enrolled: true,
    teacherId: ObjectId("507f1f77bcf86cd799439012"),
    grades: [84, 87, 86]
  },
  { 
    name: 'Zara',
    age: 22,
    course: 'Express',
    enrolled: true,
    teacherId: ObjectId("507f1f77bcf86cd799439013"),
    grades: [90, 92, 94]
  }
])


------------------------------------------------------------------------------------


db.students.findOne({ name: 'Ali' })

db.students.find({ course: 'MongoDB' })

db.students.find({})

------------------------------------------------------------------------------------

// Include only name and age (exclude _id)
db.students.find({}, { _id: 0, name: 1, age: 1 })

// Include name, course, and grades
db.students.find({}, { name: 1, course: 1, grades: 1 })

-------------------------------------------------------------------------------


Other Options
Limiting Results
db.students.find().limit(3)



Sorting Results
// Sort by age (descending)
db.students.find().sort({ age: -1 })



Combining Operations
// Find MongoDB students, show only name and grades, sorted by age
db.students.find(
  { course: 'MongoDB' },
  { name: 1, grades: 1, _id: 0 }
).sort({ age: 1 })



Working with Teachers Collection
// Find all teachers
db.teachers.find()
 


// Find teacher by subject
db.teachers.findOne({ subject: 'Node.js' })
 


// Find experienced teachers (more than 5 years)
db.teachers.find({ experience: { $gt: 5 } })

